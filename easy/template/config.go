// Code generated by hero.
// source: /Users/liuguoqiang/Desktop/go/mod/gocore/tools/gocore/template/cmd_init.got
// DO NOT EDIT!
package template

import "bytes"

func FromConfigInit(name, pkgs,configStr,configVar, InitMysql, InitRedis string, buffer *bytes.Buffer) {
	buffer.WriteString(`
package cmd

import (
	`)
	buffer.WriteString(pkgs)
	buffer.WriteString(`
	"`)
	buffer.WriteString(name)
	buffer.WriteString(`/conf"

	"github.com/weblazy/easy/utils/conf/nacos"
	"github.com/sunmi-OS/gocore/v2/db/orm"
	"github.com/sunmi-OS/gocore/v2/db/redis"
	"github.com/weblazy/easy/utils/elog"
	"github.com/sunmi-OS/gocore/v2/utils"
	"github.com/weblazy/easy/utils/conf/viper"
)

type Config struct {
	BaseConfig       struct{}
	%s
	HttpServerConfig *http_server_config.Config
	AppMysql         *emysql_config.Config
	AppRedis         *eredis_config.Config
}

var Conf = Config{
	BaseConfig:       struct{}{},
	%s
	HttpServerConfig: http_server_config.DefaultConfig(),
	AppMysql:         emysql_config.DefaultConfig(),
	AppRedis:         eredis_config.DefaultConfig(),
}

var Redis *eredis.RedisClient

var LocalConfig = `+"`"+`
[base]
debug = true

[dbApp]
Host = ""           #数据库连接地址
Name = "app"           #数据库名称
User = ""           #数据库用户名
Passwd = ""         #数据库密码
Port = "3306"       #数据库端口号

[default]
host = "" 
port = ":6379"
auth = ""
prefix = ""

			
[aliyunmq]
NameServer = ""
AccessKey = ""
SecretKey = ""
Namespace = ""

			
`+"`"+`


func InitConf() {
	switch os.Getenv(econfig.EasyConfigType) {
	case econfig.LocalType:
		common.Viper = eviper.NewViperFromString(LocalConfig)
	case econfig.FielType:
		common.Viper = eviper.NewViperFromFile("", os.Getenv(econfig.EasyConfigFile))
	case econfig.NacosType:
		nacos.NewNacosEnv()
		vt := nacos.GetViper()
		vt.SetBaseConfig(Conf.BaseConfig)
		vt.SetDataIds(os.Getenv("ServiceName"), os.Getenv("DataId"))
		// 注册配置更新回调
		vt.NacosToViper()
		common.Viper = vt.Viper
	default:
		common.Viper = eviper.NewViperFromString(LocalConfig)
	}
	common.Viper.Unmarshal(&Conf)

	initMysql()
	initRedis()
	`)
	buffer.WriteString(`
}

// initMysql 初始化mysql服务
func initMysql() {
	`)
	buffer.WriteString(InitMysql)
	buffer.WriteString(`
}

// initRedis 初始化redis服务
func initRedis() {
	`)
	buffer.WriteString(InitRedis)
	buffer.WriteString(`
}`)

}
