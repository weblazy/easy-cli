// Code generated by hero.
// source: /Users/liuguoqiang/Desktop/go/mod/gocore/tools/gocore/template/api.got
// DO NOT EDIT!
package template

import (
	"bytes"
	"fmt"
)

func FromHandler(name,httpName, handler, apiContent string, comments []string, functions []string, req []string, buffer *bytes.Buffer) {
	if apiContent == "" {
		buffer.WriteString(fmt.Sprintf(`
package handler

import (
	"%s/https/%s/def"

	"github.com/gin-gonic/gin"
    "github.com/weblazy/easy/utils/http/http_server"
)
`,name,httpName))

	} else {
		buffer.WriteString(apiContent)
	}
	for k1, v1 := range functions {
		buffer.WriteString(`
	// `)
		buffer.WriteString(v1)
		buffer.WriteString(" " + comments[k1])
		buffer.WriteString(`
    func `)
		buffer.WriteString(v1)
		buffer.WriteString(`(g *gin.Context) {
        ctx := http_server.NewContext(g)
        req := new(def.`)
		buffer.WriteString(req[k1])
		buffer.WriteString(`Request)
        err := ctx.BindValidator(req)
		if err != nil {
			ctx.Error(err)
			return
		}
		ctx.Success(def.`)
		buffer.WriteString(req[k1])
		buffer.WriteString(`Response{})
    }
`)
	}

}
